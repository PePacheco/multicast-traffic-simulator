#SUBNET
s1,10.0.0.0/8
s2,20.0.0.0/8
s3,30.0.0.0/8
#ROUTER
r1,3,10.0.0.1/8,100.10.0.1/16,100.20.0.1/16
r2,2,100.10.0.2/16,20.0.0.1/8
r3,2,100.20.0.2/16,30.0.0.1/8
#ROUTERTABLE
r1,10.0.0.0/8,0.0.0.0,0
r1,20.0.0.0/8,100.10.0.2,1
r1,30.0.0.0/8,100.20.0.2,2
r2,10.0.0.0/8,100.10.0.1,0
r2,20.0.0.0/8,0.0.0.0,1
r2,30.0.0.0/8,100.10.0.1,0
r3,10.0.0.0/8,100.20.0.1,0
r3,20.0.0.0/8,100.20.0.1,0
r3,30.0.0.0/8,0.0.0.0,1



class Router:
    def __init__(self, rid, numifs, ips, subnets):
        self.rid = rid
        self.numifs = numifs
        self.ips = ips
        self.routing_table = {}  # Tabela de roteamento
        self.networksToRouters = {}  # Mapeamento de ip para roteadores
        self.subnets = subnets  # Mapeamento de ip para subredes

    def connect_to_subnet(self, subnet):
        self.subnets[subnet.sid] = subnet

    def connect_to_router(self, network, router):
            self.networksToRouters[network] = router

    def add_route(self, netaddr, nexthop, ifnum, router, subnet):
        self.routing_table[netaddr] = (nexthop, ifnum, router, subnet)

